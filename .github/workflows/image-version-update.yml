name: Image Version Update

on:
    workflow_dispatch:
        inputs:
            json:
                description: 'Containers JSON'
                required: true

permissions:
    contents: write
    pull-requests: write

jobs:
    update-image-version:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                json: ${{ fromJSON(github.event.inputs.json) }}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v5
            
            -   name: Setup ENVs
                env:
                    CONTAINER_JSON: ${{ toJson(matrix.json) }}
                run: |
                    echo "$CONTAINER_JSON" | jq -r 'to_entries | .[] | .key + "=" + (.value|tostring)' >> $GITHUB_ENV
            -   name: Setup ENVs v2
                run: |
                    echo "OLD_IMAGE=$IMAGE_NAME:$LOCAL_TAG" >> $GITHUB_ENV
                    echo "NEW_IMAGE=$IMAGE_NAME:$REMOTE_TAG" >> $GITHUB_ENV
                    echo "BRANCH_NAME=update/$IMAGE_NAME" >> $GITHUB_ENV
            -   name: Setup Branch
                run: |
                    git config user.name github-actions
                    git config user.email github-actions@github.com
                    git checkout -b "$BRANCH_NAME"

            -   name: Setup Node.js
                uses: actions/setup-node@v5
                with:
                    node-version: 'lts/*'
                    cache: 'npm'
                    cache-dependency-path: '.github/tag-update/package-lock.json'

            -   name: Update Image Version
                id: update_image_version
                run: |
                    cd .github/tag-update
                    npm ci
                    ./update.mjs
            -   name: Commit changes
                if: steps.update_image_version.outputs.changed == 'true'
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |

                    if [ -z "$IMAGE_NAME" ] || [ -z "$LOCAL_TAG" ] || [ -z "$REMOTE_TAG" ] || [ -z "$BRANCH_NAME" ] || [ -z "$OLD_IMAGE" ] || [ -z "$NEW_IMAGE" ]; then
                        echo "IMAGE_NAME: $IMAGE_NAME || LOCAL_TAG: $LOCAL_TAG || REMOTE_TAG: $REMOTE_TAG || BRANCH_NAME: $BRANCH_NAME || OLD_IMAGE: $OLD_IMAGE || NEW_IMAGE: $NEW_IMAGE" 
                        echo "Required environment variables are not set. Exiting."
                        exit 1
                    fi

                    git add docker-compose.yml
                    git commit -m "Update '$IMAGE_NAME' from '$LOCAL_TAG' to '$REMOTE_TAG'"
                    git push -f origin "$BRANCH_NAME"

                    PR_EXISTS=$(gh pr list --base main --head "$BRANCH_NAME" --json number --jq '.[].number')
                    if [ -n "$PR_EXISTS" ]; then
                    echo "Pull request #$PR_EXISTS already exists."
                    gh pr edit "$BRANCH_NAME" --title "Update '$IMAGE_NAME' from '$LOCAL_TAG' to '$REMOTE_TAG'" --body "This PR updates the image from '$OLD_IMAGE' to '$NEW_IMAGE'."
                    gh pr comment "$BRANCH_NAME" --body "PR UPDATED: Now updating from '$LOCAL_TAG' to '$REMOTE_TAG'."
                    else
                    echo "Creating pull request..."
                    gh pr create --base main --head "$BRANCH_NAME" --title "Update '$IMAGE_NAME' from '$LOCAL_TAG' to '$REMOTE_TAG'" --body "This PR updates the image from '$OLD_IMAGE' to '$NEW_IMAGE'."
                    gh pr comment "$BRANCH_NAME" --body "PR INIT: Updating from '$OLD_IMAGE' to '$NEW_IMAGE'."
                    fi
